---
import type { Page, PaginateFunction } from 'astro'
import BaseLayout from '../../components/BaseLayout.astro'
import Posts from '../../templates/posts.astro'
import { data } from 'autoprefixer'
import ChevronLeft from '../../components/common/ChevronLeft.tsx'
import {
  fetchQiitaFeed,
  fetchZennFeed,
  extractSlugFromMd,
  sortPostsByPubDate,
} from '../../utils'
import type { Frontmatter } from '../../types/index.ts'

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction
}) {
  const ownedMd = await Astro.glob<Frontmatter>('../../content/owned/*.md')
  const ownedPosts: Frontmatter[] = ownedMd.map((post) => {
    return {
      pubDate: post.frontmatter.pubDate,
      title: post.frontmatter.title,
      link: extractSlugFromMd(post),
      media: 'owned',
    }
  })
  const qiitaPosts = await fetchQiitaFeed()
  const zennPosts = await fetchZennFeed()

  const posts = sortPostsByPubDate([...ownedPosts, ...qiitaPosts, ...zennPosts])

  return paginate(posts, { pageSize: 10 })
}
type Props = {
  page: Page<Frontmatter>
}
const { page } = Astro.props
---

<html lang="ja">
  <BaseLayout pageUrl="">
    <Posts page={page} />
  </BaseLayout>
</html>
