---
import type { Page, PaginateFunction } from 'astro'
import { MEDIA_LIST } from '../../../config'
import { extractSlugFromMd, makeQiitaPost, makeZennPost } from '../../../utils'
import type { Frontmatter, Media } from '../../../types'
import BaseLayout from '../../../components/layouts/BaseLayout.astro'
import Container from '../../../features/postList/Container.astro'
import Head from '../../../components/layouts/Head'

export const prerender = true

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction
}) {
  const ownedMd = await Astro.glob<Frontmatter>('../../../content/owned/*.md'),
    qiitaPosts = await makeQiitaPost(),
    zennPosts = await makeZennPost()
  const ownedPosts: Frontmatter[] = ownedMd.map((post) => {
    return {
      pubDate: post.frontmatter.pubDate,
      title: post.frontmatter.title,
      link: extractSlugFromMd(post),
      media: 'owned',
    }
  })

  let posts: Frontmatter[] = []
  return MEDIA_LIST.map((media) => {
    if (media === 'owned') {
      posts = ownedPosts
    } else if (media === 'qiita') {
      posts = qiitaPosts
    } else if (media === 'zenn') {
      posts = zennPosts
    }
    if (posts.length !== 0) {
      return paginate(posts, {
        params: { media },
        pageSize: 10,
      })
    }
  })
}
type Props = {
  page: Page<Frontmatter>
}
type Params = {
  media: Media
}
const { page } = Astro.props
const { media } = Astro.params as Params
---

<html lang="ja">
  <Head pagePath={`/${media}/page/${page.currentPage}`} pageType="blog" />
  <BaseLayout hasSideBar={true}>
    <Container page={page} media={media} />
  </BaseLayout>
</html>
