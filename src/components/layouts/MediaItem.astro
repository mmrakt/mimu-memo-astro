---
import React from 'react'

import { NOTE_FEED_URL, QIITA_API_ENDPOINT, ZENN_FEED_URL } from '../../config'
import { convertMediaTypeToSlug, fetchFeed, fetchPosts } from '../../utils'
import type { MediaTypeForDisplay } from '../../types'
import { getCollection } from 'astro:content'
import LoadingSpinner from '../elements/LoadingSpinner.astro'

type Props = {
  media: MediaTypeForDisplay
}
const { media } = Astro.props

let postCount
if (media === 'mimu-memo') {
  const posts = await getCollection('owned')
  postCount = posts.length
} else if (media === 'Qiita') {
  const token = import.meta.env.QIITA_TOKEN || ''
  if (token) {
    const posts = await fetchPosts(QIITA_API_ENDPOINT, token)
    postCount = posts.length
  }
} else if (media === 'Zenn') {
  const feed = await fetchFeed(ZENN_FEED_URL)
  postCount = feed.items.length
} else if (media === 'note') {
  const feed = await fetchFeed(NOTE_FEED_URL)
  postCount = feed.items.length
}
---

<>
  {
    !postCount ? (
      <LoadingSpinner />
    ) : (
      <a
        href={`/${convertMediaTypeToSlug(media)}/page/1`}
        class="mediaItem__link"
      >
        <span class="mediaItem__text">
          {media} ({postCount})
        </span>
      </a>
    )
  }
</>

<style lang="scss">
  @use '../../styles/utils' as utils;
  @use '../../styles/variables' as vars;

  .mediaItem {
    &__link {
      display: block;
      width: fit-content;
      padding: 4px;
    }
    &__text {
      margin-top: 4px;
      font-size: 14px;
      font-weight: 500;

      @extend %link;
    }
  }
</style>
