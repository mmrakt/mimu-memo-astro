---
import useStringTrim from '../../hooks/useStringTrim'

import type { PaginatedPost } from '../../types'

type Props = {
  next: PaginatedPost['next']
  prev: PaginatedPost['prev']
}
const { next, prev } = Astro.props
---

<div class="postDetailPagination">
  <div class="postDetailPagination__item">
    {
      prev.url && (
        <a
          href={`/${prev.url}`}
          class="postDetailPagination__itemLink postDetailPagination__itemLink--prev"
        >
          {useStringTrim(prev.title, 50)}
        </a>
      )
    }
  </div>
  <div class="postDetailPagination__item">
    {
      next.url && (
        <a
          href={`/${next.url}`}
          class="postDetailPagination__itemLink postDetailPagination__itemLink--next"
        >
          {useStringTrim(next.title, 50)}
        </a>
      )
    }
  </div>
</div>

<style lang="scss">
  @use '../../styles/utils' as utils;
  @use '../../styles/variables' as vars;
  .postDetailPagination {
    display: flex;
    gap: 20px;
    align-items: center;
    margin-top: 40px;

    &__item {
      width: 50%;
    }
    &__itemLink {
      @extend %link;
      display: flex;
      align-items: center;
      position: relative;

      &--prev {
        padding-left: 20px;
        &::before {
          @extend %arrow-prev;
        }
        &:hover {
          &::before {
            border-color: vars.$black-400;
          }
        }
        @include utils.dark() {
          &:hover {
            &::before {
              border-color: vars.$black-700;
            }
          }
        }
      }
      &--next {
        padding-right: 20px;
        &::after {
          @extend %arrow-next;
        }
        &:hover {
          &::after {
            border-color: vars.$black-400;
          }
        }
        @include utils.dark() {
          &:hover {
            &::after {
              border-color: vars.$black-700;
            }
          }
        }
      }
    }
  }
</style>
