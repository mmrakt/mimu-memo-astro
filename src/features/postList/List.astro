---
import LoadingSpinner from '../../components/elements/LoadingSpinner.astro'

import type { Frontmatter } from '../../types'
import Item from './Item.astro'

type Props = {
  posts: Frontmatter[]
}
const { posts } = Astro.props
---

{
  !posts ? (
    <div class="postList__loading">
      <LoadingSpinner />
    </div>
  ) : (
    <ul
      class:list={[
        'postList',
        { postList__onlyOne: posts.length === 1 ? true : false },
      ]}
    >
      {posts.map((post) => (
        <li class="postList__item">
          {post.media !== 'owned' ? (
            <a href={post.link} target="_blank" rel="noreferrer">
              <Item post={post} />
            </a>
          ) : (
            <a href={`/${post.link}`}>
              <Item post={post} />
            </a>
          )}
        </li>
      ))}
    </ul>
  )
}

<style lang="scss">
  @use '../../styles/utils' as utils;
  @use '../../styles/variables' as vars;
  .postList {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    row-gap: 40px;
    column-gap: 20px;
    position: relative;
    @include utils.slideIn();

    @include utils.mq(sp) {
      flex-wrap: nowrap;
      flex-direction: column;
      row-gap: 20px;
      padding: 0 vars.$sp-side-padding;
    }

    &__onlyOne {
      &::after {
        content: '';
        display: block;
        width: calc((100% - 20px) / 2);
      }
    }

    &__item {
      width: calc((100% - 20px) / 2);

      @include utils.mq(sp) {
        width: 100%;
      }
    }
  }
</style>
